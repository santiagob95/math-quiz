{"version":3,"sources":["svg/carpinchoNerd.png","svg/carpincho.png","svg/uno.png","svg/dos.png","svg/cinco.png","svg/diez.png","svg/veinte.png","svg/cincuenta.png","svg/cien.png","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/Result.js","components/Button.js","components/Button2.js","Header.js","components/MoneyGame.js","components/Table.js","components/controllers/HighscoreTable.js","components/PopUp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Question","props","className","content","QuestionCount","counter","total","AnswerOption","checkCorrectAnswer","answer","answerType","backgroundColor","style","type","name","checked","id","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","component","key","questionId","questionNumber","questionTotal","question","answerOptions","map","result","Result","quizResult","quizPoints","Button","onClick","children","Button2","Header","src","logo","alt","billetes","img","uno","dos","cinco","diez","veinte","cincuenta","cien","MoneyGame","state","numero","Math","floor","random","sumaBilletes","cant","correctasCounter","reintentos","username","handleBilleteSelected","bind","handleNumeroSuperado","calcularPuntos","backToInit","pushPuntaje","this","item","index","class","e","width","handleSubmitBilletes","resetSuma","dif","console","log","resetGame","puntos","setState","nuevaCant","alert","axios","post","score","config","headers","then","response","catch","error","React","Component","useStyles","makeStyles","table","color","maxWidth","SimpleTable","classes","datos","sort","a","b","Number","slice","TableContainer","align","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","owner","HighscoreTable","contenido","Array","Object","aux","get","data","forEach","push","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","palette","grey","other","onClose","disableTypography","Typography","variant","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","useState","open","setOpen","handleClose","Dialog","aria-labelledby","dividers","autoFocus","quizzes","title","games","App","answersQuantity","categorySelected","gameSelected","userId","pass","points","quizQuestions","handleAnswerSelected","handleAnswerSelectedComp","handleCategorySelected","handleGameSelected","handleSubmit","handleSubmitRegistro","backToHome","onChangeUsername","onChangePass","pushResultados","currentPage","pages","generatePages","required","placeholder","carpincho","renderQuizComp","renderQuiz","renderResult","calculatePoints","target","url","mixedAnswers","mixQuestions","answers","array","temporaryValue","randomIndex","currentIndex","length","event","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","obtainResults","setPoints","getQuestions","getQuestionsComp","correctas","correct","difficulty","multiplier","format","preventDefault","nameUser","password","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"4EAAAA,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mPCW5BC,MARf,SAAkBC,GAChB,OAAO,wBAAIC,UAAU,YAAYD,EAAME,UCY1BC,MAbf,SAAuBH,GACrB,OACE,yBAAKC,UAAU,iBAAf,YACW,8BAAOD,EAAMI,SADxB,OAC2C,8BAAOJ,EAAMK,SC4B7CC,MA/Bf,SAAsBN,GACpB,IAAIO,EAAsC,KAAjBP,EAAMQ,QAAsC,YAArBR,EAAMS,WAClDC,EAAmC,KAAjBV,EAAMQ,OAAgB,UAAgC,YAArBR,EAAMS,WAA2B,UAAW,UAEnG,OACE,wBAAIR,UAAU,eAAeU,MAAO,CAACD,gBAAiBA,IACpD,2BACEE,KAAK,QACLX,UAAU,oBACVY,KAAK,aACLC,QAASP,EACTQ,GAAIf,EAAMS,WACVO,MAAOhB,EAAMS,WACbQ,SAAUjB,EAAMQ,OAChBU,SAAUlB,EAAMmB,mBAGlB,2BAAOlB,UAAU,mBAAmBmB,QAASpB,EAAMS,YAChDT,EAAMqB,iBCwBAC,MAvCf,SAActB,GAcZ,OACE,yBACEC,UAAU,YACVsB,UAAU,OAEV,yBAAKC,IAAKxB,EAAMyB,YACd,kBAAC,EAAD,CAAerB,QAASJ,EAAM0B,eAAgBrB,MAAOL,EAAM2B,gBAC3D,kBAAC,EAAD,CAAUzB,QAASF,EAAM4B,WACzB,wBAAI3B,UAAU,iBACXD,EAAM6B,cAAcC,KAtB7B,SAA6BN,GAC3B,OACE,kBAAC,EAAD,CACEA,IAAKA,EAAItB,QACTmB,cAAeG,EAAItB,QACnBO,WAAYe,EAAIO,OAAS,UAAU,YACnCvB,OAAQR,EAAMQ,OACdiB,WAAYzB,EAAMyB,WAClBN,iBAAkBnB,EAAMmB,0BCAjBa,MAZf,SAAgBhC,GACd,OACI,yBAAKC,UAAU,oBACb,gCAASD,EAAMiC,WAAf,wBAAgDjC,EAAMkC,c,iBCK/CC,EARA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,SAAUtB,EAAS,EAATA,GACnC,OACE,4BAAQd,UAAU,SAASmC,QAASA,EAASrB,GAAIA,GAC9CsB,ICKQC,EARC,SAAC,GAA+B,IAA7BF,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,SAAUtB,EAAS,EAATA,GACpC,OACE,4BAAQd,UAAU,UAAUmC,QAASA,EAASrB,GAAIA,GAC/CsB,I,0CCDQ,SAASE,IACpB,OACA,yBAAKtC,UAAU,cACP,yBAAKuC,IAAKC,IAAMxC,UAAU,WAAWyC,IAAI,SAEzC,mE,iICINC,EAAU,CACZ,CAAC5B,GAAG,EAAEC,MAAM,EAAG4B,IAAIC,KACnB,CAAC9B,GAAG,EAAEC,MAAM,EAAG4B,IAAIE,KACnB,CAAC/B,GAAG,EAAEC,MAAO,EAAG4B,IAAIG,KACpB,CAAChC,GAAG,EAAEC,MAAM,GAAI4B,IAAII,KACpB,CAACjC,GAAG,EAAEC,MAAO,GAAI4B,IAAIK,KACrB,CAAClC,GAAG,EAAEC,MAAM,GAAI4B,IAAIM,KACpB,CAACnC,GAAG,EAAEC,MAAO,IAAK4B,IAAIO,MAWLC,E,kDACb,WAAYpD,GAAQ,IAAD,8BACjB,cAAMA,IAEDqD,MAAQ,CACTjD,QAAQ,EACRkD,OAAQC,KAAKC,MAAM,IAAAD,KAAKE,SAfjB,GAgBPC,aAAa,EACbC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAClBC,iBAAiB,EACjBC,WAAW,EACXC,SAAS,EAAK9D,MAAM8D,UAExB,EAAKC,sBAAwB,EAAKA,sBAAsBC,KAA3B,gBAC7B,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAClB,EAAKI,YAAc,EAAKA,YAAYJ,KAAjB,gBAhBF,E,qDAmBV,IAAD,OACJ,OACI,yBAAK/D,UAAU,cACdoE,KAAKhB,MAAMjD,QA9BZ,GA+BA,6BACI,yBAAKH,UAAU,SAASc,GAAG,UACvB,oFAA0DsD,KAAKhB,MAAMC,OAArE,qDAGJ,yBAAKrD,UAAU,qBACX,yBAAKA,UAAU,eACV0C,EAASb,KAAI,SAACwC,EAAMC,GACjB,OACI,kBAAC,EAAD,CACAC,MAAM,YACNzD,GAAG,QACHS,IAAK8C,EAAKtD,MACVA,MAAOsD,EAAKtD,MACZoB,QAAS,SAACqC,GAAD,OAAO,EAAKV,sBAAsBO,KAE3C,yBAAK5B,IAAI,GAAGF,IAAK8B,EAAK1B,IAAK8B,MAAM,QAChC,KAAK,EAAKrB,MAAMM,KAAKW,EAAKvD,MAAK,MAKxC,kBAAC,EAAD,CAAQA,GAAG,QAAQqB,QAAS,SAACqC,GAAD,OAAM,EAAKE,qBAAqB,EAAK3E,SAAjE,WACA,kBAAC,EAAD,CAAQe,GAAG,QAAQqB,QAAS,SAACqC,GAAD,OAAK,EAAKG,cAAtC,WAEJ,6BAIkB,UAAjBP,KAAKrE,MAAM6E,KACJ,uBAAG5E,UAAU,UAAb,WAA+BoE,KAAKhB,MAAMK,iBAIzDW,KAAKhB,MAAMjD,SAjEZ,GAkEY,6BACK0E,QAAQC,IAAIV,KAAKrE,MAAM8D,UACxB,yBAAK7D,UAAU,UAAf,SAA+BoE,KAAKH,iBAApC,YAGA,kBAAC,EAAD,CAAS9B,QAAS,SAACqC,GAAD,OAAM,EAAKO,cAA7B,sB,uCAOxBF,QAAQC,IAAI,QAAQV,KAAKrE,MAAM8D,UAC/B,IAAImB,EAAUZ,KAAKhB,MAAMO,iBAAyC,IAAtBS,KAAKhB,MAAMQ,WAQvD,MAPoB,UAAjBQ,KAAKrE,MAAM6E,MACVI,GAAe,KACC,eAAjBZ,KAAKrE,MAAM6E,IACVI,GAAgB,IACM,aAAlBZ,KAAKrE,MAAM6E,MACfI,GAAc,KAClBZ,KAAKD,YAAYa,GACTA,I,kCAGRH,QAAQC,IAAI,WACZV,KAAKa,SAAS,CACVxB,aAAa,EACbC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,O,kCAItBU,KAAKF,aACLE,KAAKa,SAAS,CACV9E,QAAQ,EACRyD,WAAW,M,mCAIfQ,KAAKa,SAAS,CACV5B,OAAQC,KAAKC,MAAM,IAAAD,KAAKE,SA3Gf,GA4GTC,aAAa,EACbC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAClBvD,QAAQiE,KAAKhB,MAAMjD,QAAU,M,4CAIfJ,GACd,IAAImF,EAAYd,KAAKhB,MAAMM,KAC3BwB,EAAUnF,EAAMe,IAAKoE,EAAUnF,EAAMe,IAAM,EAE3CsD,KAAKa,SAAS,CACVxB,aAAaW,KAAKhB,MAAMK,aAAe1D,EAAMgB,MAC7C2C,KAAKwB,M,2CAKInF,GACbqE,KAAKhB,MAAMC,SAAWe,KAAKhB,MAAMK,cACjCW,KAAKF,aACLE,KAAKa,SAAS,CACVtB,iBAAkBS,KAAKhB,MAAMO,iBAAkB,IACnDwB,MAAM,4BAEDf,KAAKhB,MAAMC,OAASe,KAAKhB,MAAMK,aACrB,aAAZ1D,EAAM6E,KACLO,MAAM,sCACNf,KAAKa,SAAS,CAACrB,WAAYQ,KAAKhB,MAAMQ,WAAa,OACnDQ,KAAKF,eAGLE,KAAKO,YACLP,KAAKa,SAAS,CAACrB,WAAYQ,KAAKhB,MAAMQ,WAAa,IACnDuB,MAAM,yCAIK,aAAZpF,EAAM6E,KACLO,MAAM,sCACNf,KAAKa,SAAS,CAACrB,WAAYQ,KAAKhB,MAAMQ,WAAa,OACnDQ,KAAKF,eAGLiB,MAAM,wBACNf,KAAKO,YACLP,KAAKa,SAAS,CACVrB,WAAWQ,KAAKhB,MAAMQ,WAAa,O,kCAMvC7D,GASRqF,IAAMC,KAAK,wCACX,CACExB,SAASO,KAAKhB,MAAMS,SACpByB,MAAOvF,GAET,CAACwF,OAZY,CACXC,QAAS,CACP,8BAA8B,wBAC9B,+BAAgC,iDAChC,+BAAgC,sCAS/BC,MAAK,SAAAC,GACAb,QAAQC,IAAI,oBAAqBY,MAEtCC,OAAM,SAAAC,GACDf,QAAQC,IAAI,kBAAmBc,Q,6CAIzCT,MAAM,2BACNf,KAAKF,iB,GA/K0B2B,IAAMC,W,2JCtBvCC,GAAYC,YAAW,CAC3BC,MAAO,CACLC,MAAO,OACPC,SAAS,UAiBE,SAASC,GAAYrG,GAClC,IAAMsG,EAAUN,KACVO,EAAQvG,EAAMuG,MAAMC,MAAK,SAACC,EAAGC,GAAJ,OAAUC,OAAOD,EAAEnB,OAASoB,OAAOF,EAAElB,UAAQqB,MAAM,EAAE,IAEpF,OADA9B,QAAQoB,MAAMK,GAEZ,kBAACM,GAAA,EAAD,CAAgB5G,UAAWqG,EAAQJ,MAAOY,MAAM,SAAUvF,UAAWwF,MACnE,kBAACC,GAAA,EAAD,CAAO/G,UAAWqG,EAAQJ,MAAOe,aAAW,gBAC1C,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CAAWN,MAAM,UAAjB,UACA,kBAACM,GAAA,EAAD,CAAWN,MAAM,UAAjB,YAGJ,kBAACO,GAAA,EAAD,KACGd,EAAMzE,KAAI,SAACwC,EAAKC,GAAN,OACT,kBAAC4C,GAAA,EAAD,CAAU3F,IAAK+C,EAAMoC,QAEnB,kBAACS,GAAA,EAAD,CAAWN,MAAM,UAAUxC,EAAKgD,OAChC,kBAACF,GAAA,EAAD,CAAWN,MAAM,UAAUxC,EAAKiB,c,IChCzBgC,G,kDACjB,WAAYvH,GAAQ,IAAD,8BACf,cAAMA,IAEDqD,MAAQ,CACTmE,UAAUC,MAAMC,SAJL,E,qDAUf,OACI,6BACI,yBAAKZ,MAAO,UACR,kBAAC,GAAD,CAAQP,MAAQlC,KAAKhB,MAAMmE,gB,0CAKvB,IAAD,OACXG,EAAI,CAAC,IACTtC,IAAMuC,IAAI,sCACTlC,MAAK,SAAAC,GAEFA,EAASkC,KAAKC,SAAQ,SAACxD,EAAMC,GACzBoD,EAAII,KAAK,CACL,MAAQzD,EAAKR,SACb,MAAQQ,EAAKiB,WAGrB,EAAKL,SAAS,CACVsC,UAAUG,W,GA/BkB7B,IAAMC,WCS5CiC,GAAcC,aAdL,SAACC,GAAD,MAAY,CACzBC,KAAM,CAEJC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,IAEzBC,YAAa,CACXC,SAAU,WACVC,MAAOP,EAAMI,QAAQ,GACrBI,IAAKR,EAAMI,QAAQ,GACnBnC,MAAO+B,EAAMS,QAAQC,KAAK,SAIVX,EAAmB,SAACjI,GAAW,IACzCqC,EAAyCrC,EAAzCqC,SAAUiE,EAA+BtG,EAA/BsG,QAAqBuC,GAAU7I,EAAtB8I,QADqB,YACC9I,EADD,mCAEhD,OACE,kBAAC,IAAD,eAAgB+I,mBAAiB,EAAC9I,UAAWqG,EAAQ6B,MAAUU,GAC7D,kBAACG,EAAA,EAAD,CAAYC,QAAQ,MAAM5G,OAM1B6G,GAAgBjB,aAAW,SAACC,GAAD,MAAY,CAC3CC,KAAM,CACJE,QAASH,EAAMI,QAAQ,OAFLL,CAIlBkB,KAEEC,GAAgBnB,aAAW,SAACC,GAAD,MAAY,CAC3CC,KAAM,CAEJC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,OAJLL,CAMlBoB,KAEW,SAAUC,KAAqB,IAAD,EACnBxD,IAAMyD,UAAS,GADI,mBACpCC,EADoC,KAC9BC,EAD8B,KAMrCC,EAAc,WAClBD,GAAQ,IAGV,OACE,6BACE,kBAAC,EAAD,CAASrH,QATW,WACtBqH,GAAQ,KAQN,kBAGA,kBAACE,EAAA,EAAD,CAAQb,QAASY,EAAaE,kBAAgB,0BAA0BJ,KAAMA,GAC5E,kBAAC,GAAD,CAAazI,GAAG,0BAA0B+H,QAASY,GAAnD,8BAGA,kBAAC,GAAD,CAAeG,UAAQ,GACL,kBAAC,GAAD,OAElB,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAQC,WAAS,EAAC1H,QAASsH,EAAavD,MAAM,WAA9C,aC1DV,IAAM4D,GAAU,CACd,CAAEhJ,GAAI,EAAGiJ,MAAO,SAChB,CAAEjJ,GAAI,EAAGiJ,MAAO,cAChB,CAAEjJ,GAAI,EAAGiJ,MAAO,aAGZC,GAAO,CACX,CAAClJ,GAAI,EAAGiJ,MAAO,aACf,CAACjJ,GAAI,EAAGiJ,MAAO,mBACf,CAACjJ,GAAI,EAAGiJ,MAAO,qBAyhBFE,G,kDAthBb,WAAYlK,GAAQ,IAAD,8BACjB,cAAMA,IAEDqD,MAAQ,CACXjD,QAAS,EACTsB,eAAgB,EAChBE,SAAU,GACVC,cAAe,GACfrB,OAAQ,GACR2J,gBAAiB,GACjBpI,OAAQ,GACRqI,iBAAiB,GACjBC,aAAa,GACbC,OAAO,GACPxG,SAAS,GACTyG,KAAK,GACLC,OAAQ,GACRC,cAAe,IAIjB,EAAKC,qBAAuB,EAAKA,qBAAqB1G,KAA1B,gBAC5B,EAAK2G,yBAA2B,EAAKA,yBAAyB3G,KAA9B,gBAChC,EAAK4G,uBAAyB,EAAKA,uBAAuB5G,KAA5B,gBAC9B,EAAK6G,mBAAqB,EAAKA,mBAAmB7G,KAAxB,gBAC1B,EAAK8G,aAAc,EAAKA,aAAa9G,KAAlB,gBACnB,EAAK+G,qBAAqB,EAAKA,qBAAqB/G,KAA1B,gBAC1B,EAAKG,WAAY,EAAKA,WAAWH,KAAhB,gBACjB,EAAKgH,WAAY,EAAKA,WAAWhH,KAAhB,gBACjB,EAAKiH,iBAAmB,EAAKA,iBAAiBjH,KAAtB,gBACxB,EAAKkH,aAAe,EAAKA,aAAalH,KAAlB,gBACpB,EAAKmH,eAAgB,EAAKA,eAAenH,KAApB,gBAErB,EAAKoH,YAAc,OACnB,EAAKC,MAAQ,EAAKC,gBAlCD,E,4DAoCH,IAAD,OACZ,MAAO,CACN,KACE,yBAAKrL,UAAU,MAAMW,KAAK,UACzB,kBAAC2B,EAAD,MACC,wBAAItC,UAAU,mBAAd,2BACA,8BACE,+BACA,2BAAQW,KAAK,OACL2K,UAAQ,EACRC,YAAY,SACZ3K,KAAK,OACLG,MAAOqD,KAAKhB,MAAMS,SAClB5C,SAAUmD,KAAK4G,oBAGvB,+BACA,2BAAQrK,KAAK,WACL2K,UAAQ,EACRC,YAAY,gBACZ3K,KAAK,OACLG,MAAOqD,KAAKhB,MAAMkH,KAClBrJ,SAAUmD,KAAK6G,gBAGvB,kBAAC,EAAD,CAAQ9I,QAASiC,KAAKyG,cAAtB,aACA,kBAAC,EAAD,CAAQ1I,QAASiC,KAAK0G,sBAAtB,iBAGF,yBAAKvI,IAAKiJ,IAAW/I,IAAI,GAAGzC,UAAU,WAI1C,cACE,yBAAKA,UAAU,OACf,kBAACsC,EAAD,MACI,wBAAItC,UAAU,mBAAd,mBACGgK,GAAMnI,KAAI,SAACwC,EAAMC,GACd,OACE,kBAAC,EAAD,CACE/C,IAAK8C,EAAKvD,GACVqB,QAAS,EAAKyI,mBACd9J,GAAIuD,EAAKvD,IAERuD,EAAK0F,UAKlB,yBAAKxH,IAAKiJ,IAAW/I,IAAI,GAAGzC,UAAU,UACtC,6BAAK,kBAAC,EAAD,CAASmC,QAASiC,KAAK2G,YAAvB,SAAL,KACA,kCAIJ,eACE,yBAAK/K,UAAU,OACb,kBAACsC,EAAD,MACA,6BACE,wBAAItC,UAAU,mBAAd,mBACG8J,GAAQjI,KAAI,SAACwC,EAAMC,GAChB,OACE,kBAAC,EAAD,CACE/C,IAAK8C,EAAKvD,GACVqB,QAAS,EAAKwI,uBACd7J,GAAIuD,EAAKvD,IAERuD,EAAK0F,WAMlB,yBAAKxH,IAAKiJ,IAAW/I,IAAI,GAAGzC,UAAU,UACtC,kBAAC,GAAD,CAAOA,UAAU,YACjB,6BAAK,kBAAC,EAAD,CAASmC,QAASiC,KAAKF,YAAvB,UAAL,KACA,kCAGJ,kBACE,yBAAKlE,UAAU,OACf,kBAACsC,EAAD,MACA,kBAAC,EAAD,CACEsC,IAAMR,KAAKhB,MAAM+G,iBACjBtG,SAAUO,KAAKhB,MAAMS,WAEvB,6BAAK,kBAAC,EAAD,CAAS1B,QAASiC,KAAKF,YAAvB,UAAL,KACE,kCAGJ,mBACE,yBAAKlE,UAAU,OACb,kBAACsC,EAAD,MACC8B,KAAKqH,iBACR,yBAAKlJ,IAAKiJ,IAAW/I,IAAI,GAAGzC,UAAU,UACtC,6BAAK,kBAAC,EAAD,CAASmC,QAASiC,KAAKF,YAAvB,UAAL,KACE,kCAGJ,MACA,yBAAKlE,UAAU,OACf,kBAACsC,EAAD,MACG8B,KAAKsH,aACN,yBAAKnJ,IAAKiJ,IAAW/I,IAAI,GAAGzC,UAAU,UACtC,6BAAK,kBAAC,EAAD,CAASmC,QAASiC,KAAKF,YAAvB,UAAL,KACE,kCAEJ,cACE,yBAAKlE,UAAU,OACb,kBAACsC,EAAD,MAEA,gCAAS8B,KAAKuH,gBACd,gCAASvH,KAAKwH,iBAEd,kBAAC,EAAD,CAAQzJ,QAASiC,KAAKF,YAAtB,mBACA,kBAAC,GAAD,MAEA,yBAAK3B,IAAKiJ,IAAW/I,IAAI,GAAGzC,UAAU,c,uCAQ5C6E,QAAQC,IAAI,UAQZD,QAAQC,IAAIV,KAAKhB,MAAMS,SAASO,KAAKhB,MAAMmH,QAC3CnF,IAAMC,KAAK,wCACX,CACExB,SAAUO,KAAKhB,MAAMS,SACrByB,MAAOlB,KAAKhB,MAAMmH,QAEpB,CAAChF,OAbY,CACXC,QAAS,CACP,8BAA8B,wBAC9B,+BAAgC,iDAChC,+BAAgC,sCAU/BC,MAAK,SAAAC,GACAb,QAAQC,IAAI,oBAAqBY,MAEtCC,OAAM,SAAAC,GACDf,QAAQC,IAAI,kBAAmBc,Q,uCAG1BpB,GACfJ,KAAKa,SAAS,CACZpB,SAAUW,EAAEqH,OAAO9K,U,mCAIVyD,GACXJ,KAAKa,SAAS,CACZqF,KAAM9F,EAAEqH,OAAO9K,U,mCAINhB,GAAQ,IAAD,OAClB8E,QAAQC,IAAI,uBACZ,IAAIgH,EAAM,oCAERA,GADY,IAAV/L,EACU,IAEK,IAAVA,EACK,IAGA,IAEd8E,QAAQC,IAAI,QAAUgH,GACtB1G,IAAMuC,IAAImE,GACPrG,MAAK,SAAAC,GACJ,IAAMqG,EAAerG,EAASkC,KAAK/F,KAAI,SAAAF,GAAQ,OAC7C,EAAKqK,aAAarK,EAASsK,YAC7B,EAAKhH,SAAS,CACZuF,cAAe9E,EAASkC,KACxBjG,SAAU+D,EAASkC,KAAK,GAAGjG,SAC3BC,cAAemK,EAAa,U,uCAKnBhM,GAAQ,IAAD,OACtB8E,QAAQC,IAAI,uBACZ,IAAIgH,EAAM,wCAERA,GADY,IAAV/L,EACU,IAEK,IAAVA,EACK,IAGA,IAEd8E,QAAQC,IAAI,QAAUgH,GACtB1G,IAAMuC,IAAImE,GACPrG,MAAK,SAAAC,GACJ,IAAMqG,EAAerG,EAASkC,KAAK/F,KAAI,SAAAF,GAAQ,OAC7C,EAAKqK,aAAarK,EAASsK,YAC7B,EAAKhH,SAAS,CACZuF,cAAe9E,EAASkC,KACxBjG,SAAU+D,EAASkC,KAAK,GAAGjG,SAC3BC,cAAemK,EAAa,U,mCAavBG,GAKX,IAJA,IACEC,EACAC,EAFEC,EAAeH,EAAMI,OAIlB,IAAMD,GACXD,EAAc9I,KAAKC,MAAMD,KAAKE,SAAW6I,GAGzCF,EAAiBD,EAFjBG,GAAgB,GAGhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,I,2CAGYK,GAAQ,IAAD,OAC1BnI,KAAKoI,cAAcD,EAAME,cAAc1L,OACnCqD,KAAKhB,MAAM3B,eAAiB2C,KAAKhB,MAAMoH,cAAc8B,OACvDI,YAAW,kBAAM,EAAKC,oBAAmB,MAEzCD,YAAW,kBAAM,EAAKE,WAAW,EAAKC,mBAAkB,KACxDH,YAAW,kBAAM,EAAKI,UAAU,EAAKlB,qBAAmB,Q,+CAKnCW,GAAQ,IAAD,OAC9BnI,KAAKoI,cAAcD,EAAME,cAAc1L,OACnCqD,KAAKhB,MAAM3B,eAAiB2C,KAAKhB,MAAMoH,cAAc8B,OACvDI,YAAW,kBAAM,EAAKC,oBAAmB,MAEzCD,YAAW,kBAAM,EAAKE,WAAW,EAAKC,mBAAkB,KACxDH,YAAW,kBAAM,EAAKI,UAAU,EAAKlB,qBAAmB,Q,yCAS3CW,GACjBnI,KAAKa,SAAS,CAACmF,aAAcJ,GAAMuC,EAAME,cAAc3L,GAAG,GAAGiJ,QAC7D3F,KAAK+G,YAAY,mB,6CAEIoB,GACnBnI,KAAKa,SAAS,CAAEkF,iBAAkBL,GAAQyC,EAAME,cAAc3L,GAAK,GAAGiJ,QAClE3F,KAAKhB,MAAMgH,eAAiBJ,GAAM,GAAGD,MACvC3F,KAAK2I,aAAaR,EAAME,cAAc3L,GAAK,GAClCsD,KAAKhB,MAAMgH,eAAiBJ,GAAM,GAAGD,OAC9C3F,KAAK4I,iBAAiBT,EAAME,cAAc3L,GAAK,GAG7CsD,KAAKhB,MAAMgH,eAAiBJ,GAAM,GAAGD,MACvC3F,KAAK+G,YAAc,QACV/G,KAAKhB,MAAMgH,eAAiBJ,GAAM,GAAGD,MAC9C3F,KAAK+G,YAAc,kBACV/G,KAAKhB,MAAMgH,eAAiBJ,GAAM,GAAGD,MAC9C3F,KAAK+G,YAAc,mBAGnB/G,KAAK+G,YAAc,K,oCAKT5K,GACZ6D,KAAKa,UAAS,SAAC7B,EAAOrD,GAAR,MAAmB,CAC/BmK,gBAAgB,2BACX9G,EAAM8G,iBADI,kBAEZ3J,GAAU6C,EAAM8G,gBAAgB3J,IAAW,GAAK,IAEnDA,OAAQA,Q,wCAQV,IAAMJ,EAAUiE,KAAKhB,MAAMjD,QAAU,EAC/BsB,EAAiB2C,KAAKhB,MAAM3B,eAAiB,EACnD2C,KAAKa,SAAS,CACZ9E,QAASA,EACTsB,eAAgBA,EAChBE,SAAUyC,KAAKhB,MAAMoH,cAAcrK,GAASwB,SAC5CC,cAAewC,KAAKhB,MAAMoH,cAAcrK,GAAS8L,QACjD1L,OAAQ,O,wCAKV,IAAI0M,EAAW7I,KAAKhB,MAAM8G,gBAAgBgD,QAAQ9I,KAAKhB,MAAM8G,gBAAgBgD,QAAQ,EAC/EC,EAAa/I,KAAKhB,MAAM+G,iBAC1BiD,EAAa,EAQjB,OANEA,EADiB,eAAfD,EACS,IACY,aAAfA,EACK,IAED,IAENzG,OAAOuG,GAAWvG,OAAO0G,K,sCAIjC,IAAMlD,EAAkB9F,KAAKhB,MAAM8G,gBACnC,MAAQ,2DAA2DmD,OAAQnD,EAAe,QAAYA,EAAe,QAAY,EAAG9F,KAAKhB,MAAMoH,cAAc8B,U,gCAGrJ/B,GACRnG,KAAKa,SAAS,CAACsF,OAASA,M,iCAEfzI,GACTsC,KAAKa,SAAS,CAAEnD,OAAQA,M,mCASxB,OALIsC,KAAKhB,MAAMtB,SACbsC,KAAK8G,iBACL9G,KAAK+G,YAAY,iBAIjB,yBAAKnL,UAAU,OACf,kBAAC,EAAD,CACEO,OAAQ6D,KAAKhB,MAAM7C,OACnBqB,cAAewC,KAAKhB,MAAMxB,cAC1BH,eAAgB2C,KAAKhB,MAAM3B,eAC3BE,SAAUyC,KAAKhB,MAAMzB,SACrBD,cAAe0C,KAAKhB,MAAMoH,cAAc8B,OACxCpL,iBAAkBkD,KAAKqG,0B,uCAY3B,OALIrG,KAAKhB,MAAMtB,SACbsC,KAAK8G,iBACL9G,KAAK+G,YAAY,iBAIjB,yBAAKnL,UAAU,OACf,kBAAC,EAAD,CACEO,OAAQ6D,KAAKhB,MAAM7C,OACnBqB,cAAewC,KAAKhB,MAAMxB,cAC1BH,eAAgB2C,KAAKhB,MAAM3B,eAC3BE,SAAUyC,KAAKhB,MAAMzB,SACrBD,cAAe0C,KAAKhB,MAAMoH,cAAc8B,OACxCpL,iBAAkBkD,KAAKsG,8B,qCAQ3B,OAAO,kBAAC,EAAD,CAAQ1I,WAAYoC,KAAKhB,MAAMtB,OAASG,WAAYmC,KAAKhB,MAAMmH,W,iCAI7DgC,GACTnI,KAAK+G,YAAY,gBAEjB/G,KAAKa,SAAS,CAAC9E,QAAS,EACtBsB,eAAgB,EAChBE,SAAU,GACVC,cAAe,GACfrB,OAAQ,GACR2J,gBAAiB,GACjBpI,OAAQ,GACRqI,iBAAiB,O,iCAKVoC,GACTnI,KAAK+G,YAAc,OACnBoB,EAAMe,iBACNlJ,KAAKa,SAAS,CACZ9E,QAAS,EACTqB,WAAY,EACZG,SAAU,IACVC,cAAe,GACfrB,OAAQ,GACR2J,gBAAiB,GACjBE,aAAc,UAEdtI,OAAQ,GACRqI,iBAAkB,GAClBoD,SAAU,O,2CAOOhB,GAAO,IAAD,OACzBA,EAAMe,iBASqB,KAAvBlJ,KAAKhB,MAAMS,WAEXgB,QAAQC,IAAIV,KAAKhB,MAAMS,UACvBgB,QAAQC,IAAIV,KAAKhB,MAAMkH,MACvBlF,IAAMC,KAZF,wCAaF,CACIxB,SAASO,KAAKhB,MAAMS,SACpB2J,SAASpJ,KAAKhB,MAAMkH,MAGxB,CAAC/E,OAjBM,CACXC,QAAS,CACP,8BAA8B,wBAC9B,+BAAgC,iDAChC,+BAAgC,sCAc5BC,MAAK,SAAAC,GACHb,QAAQC,IAAI,oBAAqBY,GACjC,EAAKT,SAAS,CAACpB,SAAU,EAAKT,MAAMS,WACpC,EAAKoB,SAAS,CAACqF,KAAM,EAAKlH,MAAMkH,OAChCnF,MAAM,kEAITQ,OAAM,SAAAC,GACLT,MAAM,gDACJN,QAAQC,IAAI,kBAAmBc,S,mCAM9B2G,GAAO,IAAD,OACjBA,EAAMe,iBASqB,KAAvBlJ,KAAKhB,MAAMS,WAEXgB,QAAQC,IAAIV,KAAKhB,MAAMS,UAEvBuB,IAAMC,KAZF,oCAaF,CACIxB,SAASO,KAAKhB,MAAMS,SACpB2J,SAASpJ,KAAKhB,MAAMkH,MAGxB,CAAC/E,OAjBM,CACXC,QAAS,CACP,8BAA8B,wBAC9B,+BAAgC,iDAChC,+BAAgC,sCAc5BC,MAAK,SAAAC,GACL,EAAKT,SAAS,CAACpB,SAAU,EAAKT,MAAMS,WACpC,EAAKoB,SAAS,CAACqF,KAAM,EAAKlH,MAAMkH,OACjC,EAAKpG,aAEJW,QAAQC,IAAI,EAAKqG,gBAElBxF,OAAM,SAAAC,GACHT,MAAM,2CACNN,QAAQC,IAAI,kBAAmBc,S,+BAOzC,OADAxB,KAAKgH,MAAQhH,KAAKiH,gBACXjH,KAAKgH,MAAMhH,KAAK+G,iB,GAjhBTrF,aCdE2H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3I,MAAK,SAAA4I,GACJA,EAAaC,gBAEd3I,OAAM,SAAAC,GACLf,QAAQe,MAAMA,EAAM2I,c","file":"static/js/main.4d665ecf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carpinchoNerd.adf5fef7.png\";","module.exports = __webpack_public_path__ + \"static/media/carpincho.bdacab6a.png\";","module.exports = __webpack_public_path__ + \"static/media/uno.8e54e3da.png\";","module.exports = __webpack_public_path__ + \"static/media/dos.fa088139.png\";","module.exports = __webpack_public_path__ + \"static/media/cinco.cea06840.png\";","module.exports = __webpack_public_path__ + \"static/media/diez.75e1776a.png\";","module.exports = __webpack_public_path__ + \"static/media/veinte.efb197b8.png\";","module.exports = __webpack_public_path__ + \"static/media/cincuenta.8dff8b56.png\";","module.exports = __webpack_public_path__ + \"static/media/cien.3956d365.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Question(props) {\r\n  return <h2 className=\"question\">{props.content}</h2>;\r\n}\r\n\r\nQuestion.propTypes = {\r\n  content: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Question;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction QuestionCount(props) {\r\n  return (\r\n    <div className=\"questionCount\">\r\n      PREGUNTA <span>{props.counter}</span> DE <span>{props.total}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuestionCount.propTypes = {\r\n  counter: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired\r\n};\r\n\r\nexport default QuestionCount;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AnswerOption(props) {\r\n  var checkCorrectAnswer = props.answer !== '' && props.answerType === 'correct';\r\n  var backgroundColor = props.answer === '' ? '#bee9f6' :props.answerType === 'correct' ? '#63ab5b': '#d92b2b';\r\n  \r\n  return (\r\n    <li className=\"answerOption\" style={{backgroundColor: backgroundColor}}>\r\n      <input\r\n        type=\"radio\"\r\n        className=\"radioCustomButton\"\r\n        name=\"radioGroup\"\r\n        checked={checkCorrectAnswer}\r\n        id={props.answerType}\r\n        value={props.answerType}\r\n        disabled={props.answer}\r\n        onChange={props.onAnswerSelected}\r\n      />\r\n      \r\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\r\n        {props.answerContent}\r\n      </label>\r\n    </li>\r\n  );\r\n}\r\n\r\nAnswerOption.propTypes = {\r\n  answerType: PropTypes.string.isRequired,\r\n  answerContent: PropTypes.string.isRequired,\r\n  answer: PropTypes.string.isRequired,\r\n  onAnswerSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AnswerOption;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Question from '../components/Question';\r\nimport QuestionCount from '../components/QuestionCount';\r\nimport AnswerOption from '../components/AnswerOption';\r\n\r\nfunction Quiz(props) {\r\n  function renderAnswerOptions(key) {\r\n    return (\r\n      <AnswerOption\r\n        key={key.content}\r\n        answerContent={key.content}\r\n        answerType={key.result ? 'correct':'incorrect'}\r\n        answer={props.answer}\r\n        questionId={props.questionId}\r\n        onAnswerSelected={props.onAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      component=\"div\"\r\n    >\r\n      <div key={props.questionId}>\r\n        <QuestionCount counter={props.questionNumber} total={props.questionTotal} />\r\n        <Question content={props.question} />\r\n        <ul className=\"answerOptions\">\r\n          {props.answerOptions.map(renderAnswerOptions)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuiz.propTypes = {\r\n  answer: PropTypes.string.isRequired,\r\n  answerOptions: PropTypes.array.isRequired,\r\n  question: PropTypes.string.isRequired,\r\n  questionId: PropTypes.number.isRequired,\r\n  questionTotal: PropTypes.number.isRequired,\r\n  onAnswerSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Result(props) {\r\n  return (\r\n      <div className=\"container result\">\r\n        <strong>{props.quizResult} y tu puntaje es de: {props.quizPoints}</strong>\r\n      </div>\r\n  );\r\n}\r\n\r\nResult.propTypes = {\r\n  quizResult: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Result;\r\n","\r\nimport React from 'react';\r\n\r\nconst Button = ({ onClick, children, id }) => {\r\n  return (\r\n    <button className=\"button\" onClick={onClick} id={id}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","\r\nimport React from 'react';\r\n\r\nconst Button2 = ({ onClick, children, id }) => {\r\n  return (\r\n    <button className=\"button2\" onClick={onClick} id={id}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button2;","import React from 'react';\r\nimport logo from './svg/carpincho.png';\r\n\r\n\r\n\r\nexport default function Header() {\r\n    return (\r\n    <div className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n           {/*eslint-disable-next-line jsx-a11y/accessible-emoji */}\r\n            <h1> ➕➖Math Quiz➖➕</h1>\r\n    </div>\r\n    );\r\n    \r\n}","import React from 'react'\r\nimport Button from './Button' \r\nimport Button2 from './Button2'  \r\n\r\nimport './MoneyGame.css'\r\nimport axios from 'axios'\r\nimport uno from '../svg/uno.png'\r\nimport dos from '../svg/dos.png'\r\nimport cinco from '../svg/cinco.png'\r\nimport diez from '../svg/diez.png'\r\nimport veinte from '../svg/veinte.png'\r\nimport cincuenta from '../svg/cincuenta.png'\r\nimport cien from '../svg/cien.png'\r\n\r\nconst billetes =[\r\n    {id:0,value:1, img:uno},\r\n    {id:1,value:2, img:dos},\r\n    {id:2,value: 5, img:cinco},\r\n    {id:3,value:10, img:diez},\r\n    {id:4,value: 20, img:veinte},\r\n    {id:5,value:50, img:cincuenta},\r\n    {id:6,value: 100, img:cien}\r\n]\r\nconst max =100, min =0;\r\n\r\nconst maxcount =3;\r\n\r\n// Dificultades: \r\n//     Facil: Muestra la suma de billetes\r\n//     Intermedio: No muestra la suma de billetes y no penaliza errores\r\n//     Avanzado: No muestra la suma de billetes y hay penalización por respuestas incorrectas\r\n\r\nexport default class MoneyGame extends React.Component {\r\n        constructor(props) {\r\n          super(props);\r\n        //const dif= props.dif;\r\n          this.state = {\r\n              counter:0,\r\n              numero: Math.floor(Math.random() * (max - min) - min),\r\n              sumaBilletes:0,\r\n              cant:[0,0,0,0,0,0,0],\r\n              correctasCounter:0,\r\n              reintentos:0,\r\n              username:this.props.username\r\n          }\r\n          this.handleBilleteSelected = this.handleBilleteSelected.bind(this);\r\n          this.handleNumeroSuperado = this.handleNumeroSuperado.bind(this);\r\n          this.calcularPuntos = this.calcularPuntos.bind(this)\r\n          this.backToInit = this.backToInit.bind(this);\r\n          this.pushPuntaje = this.pushPuntaje.bind(this);\r\n          \r\n        };\r\n        render(){\r\n            return (\r\n                <div className=\"Contenedor\">\r\n                {this.state.counter<maxcount &&\r\n                <div>\r\n                    <div className='button' id='titulo'>\r\n                        <p>Queremos comprar una bolsa de caramelos, pero cuesta ${this.state.numero}\r\n                            ¿Cuántos billetes crees que necesitaremos?</p>\r\n                    </div>\r\n                    <div className='BotonesYHighscore'>\r\n                        <div className='botonHolder'>\r\n                            {billetes.map((item, index) => {\r\n                                return (\r\n                                    <Button \r\n                                    class='grid-item'\r\n                                    id='Money'\r\n                                    key={item.value}\r\n                                    value={item.value}\r\n                                    onClick={(e) => this.handleBilleteSelected(item)}\r\n                                    >\r\n                                    <img alt='' src={item.img} width='50%' />\r\n                                    {\" x\"+this.state.cant[item.id]||'0'}\r\n                                    </Button>  \r\n                                    \r\n                                )\r\n                                })}\r\n                            <Button id='Money' onClick={(e)=> this.handleSubmitBilletes(this.props)}> Listo!</Button>\r\n                            <Button id='Money' onClick={(e)=>this.resetSuma()}>Borrar</Button>\r\n                        </div>\r\n                        <div>\r\n\r\n                       \r\n                        {/* //highscore  */}\r\n                        {this.props.dif==='Facil' &&  \r\n                                <p className='button'>Llevas ${this.state.sumaBilletes}</p>}    \r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n                {this.state.counter>=maxcount &&\r\n                            <div>\r\n                                {console.log(this.props.username)}\r\n                                <div className='button'>Tenes {this.calcularPuntos()} puntos!\r\n                                </div>\r\n                                 \r\n                                <Button2 onClick={(e)=> this.resetGame()}>Volver a jugar</Button2>\r\n\r\n                            </div>}\r\n        </div>)\r\n\r\n    }\r\n    calcularPuntos(){\r\n        console.log(\"user:\"+this.props.username)\r\n        let puntos = (this.state.correctasCounter - this.state.reintentos*0.25);\r\n        if(this.props.dif==='Facil')\r\n            puntos= puntos*100;\r\n        if(this.props.dif==='Intermedio')\r\n            puntos = puntos*200;\r\n        else if(this.props.dif ==='Avanzado')\r\n            puntos=puntos*300;\r\n        this.pushPuntaje(puntos)\r\n        return (puntos);\r\n    }\r\n    resetSuma(){\r\n        console.log(\"borrado\")\r\n        this.setState({\r\n            sumaBilletes:0,\r\n            cant:[0,0,0,0,0,0,0],\r\n            })   \r\n    }\r\n    resetGame(){\r\n        this.backToInit();\r\n        this.setState({\r\n            counter:0,\r\n            reintentos:0,\r\n        })\r\n    }\r\n    backToInit(){\r\n        this.setState({\r\n            numero: Math.floor(Math.random() * (max - min) - min),\r\n            sumaBilletes:0,\r\n            cant:[0,0,0,0,0,0,0],\r\n            counter:this.state.counter + 1\r\n        })\r\n    }\r\n\r\n    handleBilleteSelected(props){\r\n            let nuevaCant = this.state.cant; \r\n            nuevaCant[props.id]= nuevaCant[props.id] + 1;\r\n\r\n            this.setState({\r\n                sumaBilletes:this.state.sumaBilletes + props.value,\r\n                cant:nuevaCant\r\n            })\r\n        }        \r\n\r\n    \r\n    handleSubmitBilletes(props){\r\n        if (this.state.numero === this.state.sumaBilletes){\r\n            this.backToInit();\r\n            this.setState({\r\n                correctasCounter: this.state.correctasCounter +1})\r\n            alert(\"MUY BIEN! Adivinaste :D\");         \r\n        }\r\n        else if (this.state.numero < this.state.sumaBilletes){\r\n            if(props.dif==='Avanzado'){\r\n                alert('Al piste perdiste. No es correcto ')\r\n                this.setState({reintentos: this.state.reintentos + 1.25})\r\n                this.backToInit();\r\n            }\r\n            else{\r\n                this.resetSuma();\r\n                this.setState({reintentos: this.state.reintentos + 1})\r\n                alert(\"Te pasaste :( \\n Intentalo otra vez!\")\r\n            }\r\n        }\r\n        else{\r\n            if(props.dif==='Avanzado'){\r\n                alert('Al piste perdiste. No es correcto ')\r\n                this.setState({reintentos: this.state.reintentos + 1.25})\r\n                this.backToInit();\r\n            }\r\n            else{\r\n                alert(\"Te quedaste corto ;)\")\r\n                this.resetSuma();\r\n                this.setState({\r\n                    reintentos:this.state.reintentos + 1\r\n                })\r\n            }\r\n        }\r\n        \r\n    }\r\n    pushPuntaje(props){\r\n\r\n        let config = {\r\n          headers: {\r\n            'Access-Control-Allow-Origin':'http://localhost:3000',\r\n            'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n            'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, DELETE'\r\n          }\r\n        }\r\n        axios.post('http://localhost:5000/qhighscores/add',\r\n        {\r\n          username:this.state.username,\r\n          score: props,\r\n        },\r\n        {config})\r\n            .then(response => {\r\n                  console.log(\"Success ========>\", response);            \r\n            })\r\n            .catch(error => {\r\n                  console.log(\"Error ========>\", error);\r\n            })\r\n      }\r\n    handleNumeroSuperado(){\r\n        alert(\"superaste el numero! :(\");\r\n        this.backToInit();\r\n    }\r\n    \r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    color: 'blue',\r\n    maxWidth:'100%',\r\n  },\r\n});\r\n\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n// const rows = [\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0),\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n// ];\r\n\r\n\r\nexport default function SimpleTable(props) {\r\n  const classes = useStyles();\r\n  const datos = props.datos.sort((a, b) => Number(b.score) - Number(a.score)).slice(1,10);\r\n  console.table(datos);\r\n  return (\r\n    <TableContainer className={classes.table} align='center'  component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {/* <TableCell>#</TableCell> */}\r\n            <TableCell align=\"center\">Nombre</TableCell>\r\n            <TableCell align=\"center\">Puntos</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {datos.map((item,index) => (\r\n            <TableRow key={index.Number}>\r\n              {/* <TableCell align=\"center\">{item.index}</TableCell> */}\r\n              <TableCell align=\"center\">{item.owner}</TableCell>\r\n              <TableCell align=\"center\">{item.score}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React from 'react'\r\nimport Table from '../Table'\r\nimport axios from 'axios'\r\n// const contenido = [\r\n//     {score:1200, owner: 'santi'},\r\n//     {score:900, owner: 'clara'},\r\n//     {score:1500, owner: 'martin'},\r\n//     {score:500, owner: 'juan'},\r\n//     {score:300, owner: 'hernan'},\r\n//     {score:800, owner: 'tomas'},\r\n//     {score:1500, owner: 'pablo'},\r\n//     {score:1300, owner: 'maria'},\r\n    \r\n//   ];\r\n\r\n\r\n\r\nexport default class HighscoreTable extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n      //const dif= props.dif;\r\n        this.state = {\r\n            contenido:Array(Object),\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return ( \r\n            <div>\r\n                <div align ='center'>\r\n                    <Table  datos= {this.state.contenido}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount(){\r\n        let aux=[{}];\r\n        axios.get('http://localhost:5000/qhighscores/')\r\n        .then(response=> {\r\n\r\n            response.data.forEach((item, index)  => {\r\n                aux.push({\r\n                    'owner':item.username,\r\n                    'score':item.score\r\n                })     \r\n            });\r\n            this.setState({\r\n                contenido:aux\r\n            })\r\n        })\r\n        \r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Button2 from '../components/Button2'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\n// import CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HighscoreTable from './controllers/HighscoreTable';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n     \r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    \r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function  CustomizedDialogs() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div > \r\n      <Button2 onClick={handleClickOpen}>\r\n        Ver Highscores\r\n      </Button2>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Los Mejores de los Mejores\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n                          <HighscoreTable/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Cerrar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport \"simple.string.format\";\r\nimport Quiz from './components/Quiz';\r\nimport Result from './components/Result';\r\nimport carpincho from './svg/carpinchoNerd.png'\r\nimport Button from './components/Button';\r\nimport Button2 from './components/Button2';\r\nimport './App.css';\r\nimport axios from 'axios'\r\nimport Header from './Header'\r\nimport MoneyGame from './components/MoneyGame';\r\nimport PopUp from './components/PopUp'\r\n\r\n//import {loginGrupos} from './controller/gameController.js';\r\n\r\nconst quizzes = [\r\n  { id: 1, title: 'Facil' },\r\n  { id: 2, title: 'Intermedio' },\r\n  { id: 3, title: 'Avanzado' },\r\n];\r\n\r\nconst games =[\r\n  {id: 1, title: 'Preguntas'},\r\n  {id: 2, title: 'Cuenta Billetes'},\r\n  {id: 3, title: 'Comparar Numeros'},\r\n]\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      counter: 0,\r\n      questionNumber: 1,\r\n      question: '',\r\n      answerOptions: [],\r\n      answer: '',\r\n      answersQuantity: {},\r\n      result: '',\r\n      categorySelected:'',\r\n      gameSelected:'',\r\n      userId:'',\r\n      username:'',\r\n      pass:'',\r\n      points: '',\r\n      quizQuestions: '',\r\n    };\r\n  \r\n\r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n    this.handleAnswerSelectedComp = this.handleAnswerSelectedComp.bind(this);\r\n    this.handleCategorySelected = this.handleCategorySelected.bind(this);\r\n    this.handleGameSelected = this.handleGameSelected.bind(this);\r\n    this.handleSubmit= this.handleSubmit.bind(this);\r\n    this.handleSubmitRegistro=this.handleSubmitRegistro.bind(this);\r\n    this.backToInit= this.backToInit.bind(this);\r\n    this.backToHome= this.backToHome.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePass = this.onChangePass.bind(this);\r\n    this.pushResultados =this.pushResultados.bind(this);\r\n\r\n    this.currentPage = 'home'; //Cuenta Billetes\r\n    this.pages = this.generatePages();\r\n    }\r\n  generatePages(){\r\n     return {\r\n      'home': (\r\n        <div className=\"App\" type='hidden'  >\r\n         <Header />\r\n          <h1 className=\"titleWithEffect\"> ¡Empecemos a Jugar!</h1>\r\n          <form>\r\n            <label>\r\n            <input  type=\"text\" \r\n                    required \r\n                    placeholder=\"Nombre\"\r\n                    name='name' \r\n                    value={this.state.username} \r\n                    onChange={this.onChangeUsername}\r\n                     />\r\n            </label>\r\n            <label>\r\n            <input  type=\"password\" \r\n                    required \r\n                    placeholder=\"Contraseña\"\r\n                    name='pass' \r\n                    value={this.state.pass} \r\n                    onChange={this.onChangePass}\r\n                     />\r\n            </label>\r\n            <Button onClick={this.handleSubmit}> Ingresar</Button>\r\n            <Button onClick={this.handleSubmitRegistro}> Registrarse</Button>\r\n          </form>\r\n         \r\n          <img src={carpincho} alt=\"\" className=\"carpi\" />\r\n          \r\n        </div>\r\n      ),\r\n      'gameSelection':(\r\n        <div className='App'>\r\n        <Header />\r\n            <h1 className=\"titleWithEffect\"> Elige Tu Juego</h1>\r\n              {games.map((item, index) => {\r\n                  return (\r\n                    <Button \r\n                      key={item.id}\r\n                      onClick={this.handleGameSelected}\r\n                      id={item.id}\r\n                      >\r\n                      {item.title}\r\n                    </Button>  \r\n                  )\r\n                })\r\n              }\r\n          <img src={carpincho} alt=\"\" className=\"carpi\" />\r\n          <div><Button2 onClick={this.backToHome}>Salir</Button2> </div>\r\n          <h1> </h1>\r\n          </div>\r\n      ),\r\n\r\n      'levelSelection': (\r\n        <div className=\"App\">\r\n          <Header />\r\n          <div>\r\n            <h1 className=\"titleWithEffect\"> Elige Tu Nivel</h1>\r\n              {quizzes.map((item, index) => {\r\n                  return (\r\n                    <Button \r\n                      key={item.id}\r\n                      onClick={this.handleCategorySelected}\r\n                      id={item.id}\r\n                      >\r\n                      {item.title}\r\n                    </Button>  \r\n                  )\r\n                })\r\n              }\r\n          </div>\r\n          <img src={carpincho} alt=\"\" className=\"carpi\" />\r\n          <PopUp className='button2' /> \r\n          <div><Button2 onClick={this.backToInit}>Volver</Button2> </div>\r\n          <h1> </h1>\r\n        </div>\r\n      ),\r\n      'Cuenta Billetes':(\r\n        <div className=\"App\">\r\n        <Header />\r\n        <MoneyGame\r\n          dif= {this.state.categorySelected}\r\n          username={this.state.username}\r\n        />\r\n        <div><Button2 onClick={this.backToInit}>Volver</Button2> </div>\r\n          <h1> </h1>\r\n        </div>\r\n      ),\r\n      'Comparar Numeros':(\r\n        <div className=\"App\" >\r\n          <Header />\r\n          {this.renderQuizComp()}\r\n        <img src={carpincho} alt=\"\" className=\"carpi\" />\r\n        <div><Button2 onClick={this.backToInit}>Volver</Button2> </div>\r\n          <h1> </h1>\r\n        </div>\r\n      ),\r\n      'quest':(\r\n      <div className=\"App\">\r\n      <Header />\r\n        {this.renderQuiz()}\r\n        <img src={carpincho} alt=\"\" className=\"carpi\" />\r\n        <div><Button2 onClick={this.backToInit}>Volver</Button2> </div>\r\n          <h1> </h1>\r\n    </div> ),\r\n      'obtainResults': (\r\n        <div className=\"App\">\r\n          <Header />   \r\n               \r\n          <center>{this.renderResult()}</center>\r\n          <center>{this.calculatePoints}</center> \r\n          \r\n          <Button onClick={this.backToInit}>Volver A Jugar!</Button> \r\n          <PopUp/>\r\n          \r\n          <img src={carpincho} alt=\"\" className=\"carpi\" />\r\n          </div>          \r\n          \r\n      ),\r\n    }\r\n  }\r\n  \r\n  pushResultados(){\r\n    console.log(\"LLEGUE\")\r\n    let config = {\r\n      headers: {\r\n        'Access-Control-Allow-Origin':'http://localhost:3000',\r\n        'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, DELETE'\r\n      }\r\n    }\r\n    console.log(this.state.username,this.state.points)\r\n    axios.post('http://localhost:5000/qhighscores/add',\r\n    {\r\n      username: this.state.username,\r\n      score: this.state.points,\r\n    },\r\n    {config})\r\n        .then(response => {\r\n              console.log(\"Success ========>\", response);            \r\n        })\r\n        .catch(error => {\r\n              console.log(\"Error ========>\", error);\r\n        })\r\n  }\r\n  onChangeUsername(e){\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePass(e){\r\n    this.setState({\r\n      pass: e.target.value,\r\n    });\r\n  }\r\n\r\n  getQuestions(props) {\r\n    console.log('component did mount')\r\n    let url = 'http://localhost:5000/qquestions/';\r\n    if (props === 2) {\r\n      url = url + '3'\r\n    }\r\n    else if (props === 1) {\r\n      url = url + '2'\r\n    }\r\n    else {\r\n      url = url + '1'\r\n    }\r\n    console.log('url: ' + url)\r\n    axios.get(url)\r\n      .then(response => {\r\n        const mixedAnswers = response.data.map(question =>\r\n          this.mixQuestions(question.answers))\r\n        this.setState({\r\n          quizQuestions: response.data,\r\n          question: response.data[0].question,\r\n          answerOptions: mixedAnswers[0]\r\n        });\r\n      })\r\n\r\n  }\r\n  getQuestionsComp(props) {\r\n    console.log('component did mount')\r\n    let url = 'http://localhost:5000/qquestionsComp/';\r\n    if (props === 2) {\r\n      url = url + '3'\r\n    }\r\n    else if (props === 1) {\r\n      url = url + '2'\r\n    }\r\n    else {\r\n      url = url + '1'\r\n    }\r\n    console.log('url: ' + url)\r\n    axios.get(url)\r\n      .then(response => {\r\n        const mixedAnswers = response.data.map(question =>\r\n          this.mixQuestions(question.answers))\r\n        this.setState({\r\n          quizQuestions: response.data,\r\n          question: response.data[0].question,\r\n          answerOptions: mixedAnswers[0]\r\n        });\r\n      })\r\n    //   const mixedAnswers = quizQuestions.map(question =>\r\n    //     this.mixQuestions(question.answers)\r\n    //   );\r\n    //   this.setState({\r\n    //     question: quizQuestions[0].question,\r\n    //     answerOptions: mixedAnswers[0]\r\n    //   });\r\n  }\r\n\r\n\r\n  mixQuestions(array) {\r\n    var currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n  \r\n  handleAnswerSelected(event) {\r\n    this.setUserAnswer(event.currentTarget.value);\r\n    if (this.state.questionNumber < this.state.quizQuestions.length) {\r\n      setTimeout(() => this.setNextQuestion(), 500);\r\n    } else {\r\n      setTimeout(() => this.setResults(this.obtainResults()), 500);\r\n      setTimeout(() => this.setPoints(this.calculatePoints()),500);\r\n    }\r\n    \r\n  }\r\n\r\n  handleAnswerSelectedComp(event) {\r\n    this.setUserAnswer(event.currentTarget.value);\r\n    if (this.state.questionNumber < this.state.quizQuestions.length) {\r\n      setTimeout(() => this.setNextQuestion(), 500);\r\n    } else {\r\n      setTimeout(() => this.setResults(this.obtainResults()), 500);\r\n      setTimeout(() => this.setPoints(this.calculatePoints()),500);\r\n    }\r\n    \r\n  }\r\n//     handleCategorySelected(event) {\r\n//     this.setState({ categorySelected: quizzes[event.currentTarget.id-1].title }, () => \r\n//     console.log(this.state.categorySelected));\r\n// }\r\n\r\nhandleGameSelected(event) {\r\n  this.setState({gameSelected: games[event.currentTarget.id-1].title});\r\n  this.currentPage='levelSelection';\r\n}\r\nhandleCategorySelected(event) {\r\n    this.setState({ categorySelected: quizzes[event.currentTarget.id - 1].title });\r\n    if (this.state.gameSelected === games[0].title) {\r\n      this.getQuestions(event.currentTarget.id - 1)\r\n    } else if (this.state.gameSelected === games[2].title) {\r\n      this.getQuestionsComp(event.currentTarget.id - 1);\r\n    }\r\n\r\n    if (this.state.gameSelected === games[0].title) { //quiz\r\n      this.currentPage = 'quest';\r\n    } else if (this.state.gameSelected === games[1].title) { //Juego 2\r\n      this.currentPage = 'Cuenta Billetes';\r\n    } else if (this.state.gameSelected === games[2].title) { //Juego 3\r\n      this.currentPage = 'Comparar Numeros';\r\n    }\r\n    else {\r\n      this.currentPage = '';\r\n    }\r\n  }\r\n\r\n\r\n  setUserAnswer(answer) {\r\n    this.setState((state, props) => ({\r\n      answersQuantity: {\r\n        ...state.answersQuantity,\r\n        [answer]: (state.answersQuantity[answer] || 0) + 1\r\n      },\r\n      answer: answer,\r\n     \r\n      \r\n    }));\r\n    //console.log(answer);\r\n  }\r\n\r\n  setNextQuestion() {\r\n    const counter = this.state.counter + 1;\r\n    const questionNumber = this.state.questionNumber + 1;\r\n    this.setState({\r\n      counter: counter,\r\n      questionNumber: questionNumber,\r\n      question: this.state.quizQuestions[counter].question,\r\n      answerOptions: this.state.quizQuestions[counter].answers,\r\n      answer: '',\r\n    });\r\n  }\r\n// ---------------------------------------------------------------------------------------------------------------\r\n  calculatePoints(){\r\n    let correctas =this.state.answersQuantity.correct?this.state.answersQuantity.correct:0;\r\n    const difficulty = this.state.categorySelected;\r\n    let multiplier = 0;\r\n    if (difficulty === 'Intermedio'){\r\n      multiplier=200;\r\n    }else if (difficulty === 'Avanzado'){\r\n      multiplier = 300;\r\n    }else{\r\n      multiplier =100;\r\n    }\r\n    return (Number(correctas)*Number(multiplier));\r\n  }\r\n  \r\n  obtainResults() {\r\n    const answersQuantity = this.state.answersQuantity;\r\n    return ('Haz logrado responder {0} preguntas correctamente de {1}'.format( answersQuantity[\"correct\"]?answersQuantity[\"correct\"]:0, this.state.quizQuestions.length));\r\n  }\r\n\r\n  setPoints(points){\r\n    this.setState({points : points})\r\n  }\r\n  setResults(result) {\r\n    this.setState({ result: result })\r\n}\r\n\r\n  renderQuiz() {\r\n    if (this.state.result){\r\n      this.pushResultados();\r\n      this.currentPage='obtainResults';\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n      <Quiz\r\n        answer={this.state.answer}\r\n        answerOptions={this.state.answerOptions}\r\n        questionNumber={this.state.questionNumber}\r\n        question={this.state.question}\r\n        questionTotal={this.state.quizQuestions.length}\r\n        onAnswerSelected={this.handleAnswerSelected}\r\n      />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderQuizComp() {\r\n    if (this.state.result){\r\n      this.pushResultados();\r\n      this.currentPage='obtainResults';\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n      <Quiz\r\n        answer={this.state.answer}\r\n        answerOptions={this.state.answerOptions}\r\n        questionNumber={this.state.questionNumber}\r\n        question={this.state.question}\r\n        questionTotal={this.state.quizQuestions.length}\r\n        onAnswerSelected={this.handleAnswerSelectedComp}\r\n      />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  renderResult() {\r\n    return <Result quizResult={this.state.result}  quizPoints={this.state.points}/>;\r\n  }\r\n\r\n\r\n  backToInit(event){\r\n    this.currentPage='gameSelection';\r\n    // event.preventDefault();\r\n    this.setState({counter: 0,\r\n      questionNumber: 1,\r\n      question: '',\r\n      answerOptions: [],\r\n      answer: '',\r\n      answersQuantity: {},\r\n      result: '',\r\n      categorySelected:''});\r\n   \r\n      /*,      username:''*/\r\n  }\r\n\r\n  backToHome(event) {\r\n    this.currentPage = 'home';\r\n    event.preventDefault();\r\n    this.setState({\r\n      counter: 0,\r\n      questionId: 1,\r\n      question: ' ',\r\n      answerOptions: [],\r\n      answer: '',\r\n      answersQuantity: {},\r\n      gameSelected: \"Ninguno\",\r\n\r\n      result: '',\r\n      categorySelected: '',\r\n      nameUser: ''\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  handleSubmitRegistro(event){\r\n    event.preventDefault();\r\n    let url='http://localhost:5000/users/registrar'\r\n    let config = {\r\n      headers: {\r\n        'Access-Control-Allow-Origin':'http://localhost:3000',\r\n        'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, DELETE'\r\n      }\r\n    }\r\n     if(this.state.username !==''){\r\n\r\n        console.log(this.state.username);\r\n        console.log(this.state.pass);\r\n        axios.post(url,\r\n          {\r\n              username:this.state.username,\r\n              password:this.state.pass\r\n              //password: this.state.password,\r\n          },\r\n          {config}\r\n          ).then(response => {\r\n              console.log(\"Success ========>\", response);\r\n              this.setState({username: this.state.username});\r\n              this.setState({pass: this.state.pass});\r\n              alert('Te registraste correctamente, ahora podes iniciar tu sesion')\r\n              // this.currentPage='gameSelection'    \r\n                    \r\n          })\r\n          .catch(error => {\r\n            alert(\"ese usuario ya esta tomado :( proba con otro\")\r\n              console.log(\"Error ========>\", error);\r\n          })\r\n    }\r\n   \r\n    };\r\n    //login\r\n  handleSubmit(event){\r\n    event.preventDefault();\r\n    let url='http://localhost:5000/users/login';\r\n    let config = {\r\n      headers: {\r\n        'Access-Control-Allow-Origin':'http://localhost:3000',\r\n        'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, DELETE'\r\n      }\r\n    }\r\n     if(this.state.username !==''){\r\n\r\n        console.log(this.state.username);\r\n        //console.log(this.state.pass);\r\n        axios.post(url,\r\n          {\r\n              username:this.state.username,\r\n              password:this.state.pass\r\n              //password: this.state.password,\r\n          },\r\n          {config}\r\n          ).then(response => {\r\n            this.setState({username: this.state.username});\r\n            this.setState({pass: this.state.pass});\r\n           this.backToInit()\r\n            \r\n            console.log(this.currentPage)              \r\n          })\r\n          .catch(error => {\r\n              alert(\"Clave incorrecta o el usuario no existe\")\r\n              console.log(\"Error ========>\", error);\r\n          })\r\n    }\r\n   \r\n    };\r\n render() {\r\n    this.pages = this.generatePages();\r\n    return this.pages[this.currentPage];\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}